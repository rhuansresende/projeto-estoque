services:
  postgres:
    image: postgres:15
    container_name: postgres_estoque
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build: ../estoque-service
    container_name: estoque_service
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILE}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${ESTOQUE_SERVICE_PORT}:8000"
    restart: unless-stopped

  frontend:
    build: ../estoque-web
    container_name: estoque_web
    environment:
      - API_URL=http://backend.estoque.com.br:${ESTOQUE_SERVICE_PORT}
    ports:
      - "${ESTOQUE_WEB_PORT}:80"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres-data: